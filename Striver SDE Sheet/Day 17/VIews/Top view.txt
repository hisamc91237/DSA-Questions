class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        if(root == NULL) return ans;
        
        map<int,int> mp;
        queue<pair<Node*,int>>q;
        
        q.push({root,0}); // as at start line is 0 and it contains root.
        
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            Node* node = it.first;
            int line = it.second;
            if(mp.find(line) == mp.end()) mp[line] = node -> data; // create line to data mappping
            
            // traverse left
            if(node -> left != NULL)
                q.push({node->left,line-1});
                
            // traverse right
            if(node -> right != NULL) 
                q.push({node->right,line+1});
                
        }
        
        // 2nd will contain data.
        for(auto it : mp){
            ans.push_back(it.second);
        }
        return ans;
    }