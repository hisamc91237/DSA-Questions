Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

Example 1:

Input: root = [1,2,2,3,4,4,3]
Output: true

APPROACH : 

class Solution {
public:
    bool helper(TreeNode* p , TreeNode* q){
        if(!p && !q) return true;
        
        if(!p || !q) return false;
        
        if(p -> val!= q -> val) return false;
        
        return helper(p -> left , q -> right) && helper( p -> right , q -> left);
    }
    bool isSymmetric(TreeNode* root) {
        
        if(!root) return true;
        
        return helper(root -> left , root -> right);
    }
};


