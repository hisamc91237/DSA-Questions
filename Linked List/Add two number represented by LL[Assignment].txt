import java.util.*;
import java.lang.*;
import java.io.*;

class Node{
  int data;
  Node next;
  Node(int data){
    this.data = data;
    this.next = null;
  }
}

class LinkedList{
  Node head;

  void add(int data){
    Node new_node = new Node(data);
    if(head == null){
      head = new_node;
      return;
    }
    Node curr = head;
    while(curr.next!=null){
      curr = curr.next;
    }
    curr.next= new_node;
  }
}


public class Main
{
    public static Node reverse(Node head){
      Node curr = head;
      Node next = null;
      Node prev = null;
      while(curr!=null){
        next = curr.next;
        curr.next = prev;
        prev = curr;
        curr = next;
      }
      return prev;
    }

  public static void combine(Node temp1,Node temp2,LinkedList ans){
            int carry = 0;
          while(temp1!=null && temp2!=null){
            int a = temp1.data + temp2.data + carry;
            ans.add(a%10);
            carry = a / 10;
            temp1 = temp1.next;
            temp2 = temp2.next;
            }
          
            while(temp1!=null){
             int a = temp1.data + carry;
             ans.add(a%10);
              carry = a/ 10;
              temp1 = temp1.next;
          }

           while(temp2!=null){
             int a = temp2.data + carry;
              ans.add(a%10);
              carry = a / 10;
             temp2 = temp2.next;
            }

          if (carry>0){
            ans.add(carry);
          }

  }
  
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
      
        LinkedList l1 = new LinkedList();
        for(int i =0;i<n;i++){
          int x = sc.nextInt();
          l1.add(x);
        }
          
          LinkedList l2= new LinkedList();
          for(int i =0;i<m;i++){
          int x = sc.nextInt();
          l2.add(x);
        }
      
        l1.head = reverse(l1.head);
        l2.head = reverse(l2.head);

          LinkedList ans = new LinkedList();
        combine(l1.head,l2.head,ans);

          
          ans.head = reverse(ans.head);

          Node curr = ans.head;
          while(curr!=null){
            System.out.print(curr.data+" ");
            curr = curr.next;
          }
	}
}