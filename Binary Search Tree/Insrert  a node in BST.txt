Given a BST and a key K. If K is not present in the BST, Insert a new Node with a value equal to K into the BST. 
Note: If K is already present in the BST, don't modify the BST.

Input:
     2
   /   \
  1     3
K = 4
Output: 1 2 3 4
Explanation: After inserting the node 4
Inorder traversal will be 1 2 3 4.

APPROACH :

Node* insert(Node* root, int Key) {
    // Your code here
    if( root == NULL) {
        return new Node(Key);
    }
    
    else if(root -> data < Key)
        root->right = insert(root->right,Key);
    else if(root -> data > Key)
        root->left = insert(root->left,Key);
     
     return root;   
}