Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0

Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.

APPROACH: 

class Solution{
    public:
    int maxLen(vector<int>&arr, int n)
    {   
        int res = 0; // to store result.
        int sum = 0; // to store sum.
        
        unordered_map<int,int> mp;
        
        // assign 0 at -1 index.
        mp[sum] = -1;
        
        for(int i = 0;i<n;i++){
            sum += arr[i];
            
            // if particular sum occurs again it takes diff from first ever occurence.
            if(mp.count(sum)) res = max(res , i - mp[sum]);
            
            // store index if it not present.
            else mp[sum] = i;
        }
        return res;
        
    }
    
};

