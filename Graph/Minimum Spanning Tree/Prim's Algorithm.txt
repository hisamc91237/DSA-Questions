Given a weighted, undirected and connected graph of V vertices and E edges. The task is to find the sum of weights of the edges of the Minimum Spanning Tree.

Example 1:

Input:
3 3
0 1 5
1 2 3
0 2 1

Output:
4
Explanation:

The Spanning Tree resulting in a weight
of 4 is shown above.

APPROACH : 

class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int,int> , vector<pair<int,int>> ,greater<pair<int,int>>> pq;
        
        // visited array
        vector<int> vis(V,0);
        
        // {wt,node}
        pq.push({0,0});
        int sum = 0;
        
        while(!pq.empty()){
            auto it = pq.top();
            int wt = it.first;
            int node = it.second;
            pq.pop();
            
            if(vis[node] == 1) continue;
            vis[node] = 1;
            
            // add sum 
            sum += wt;
            
            // check in all adjacent nodes
            for(auto i : adj[node]){
                int adjNode = i[0];
                int edgeW = i[1];
                
                if(!vis[adjNode]) pq.push({edgeW,adjNode});
            }
        }
        return sum;
