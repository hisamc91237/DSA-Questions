Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Right view of following tree is 1 3 7 8.

          1
       /     \
     2        3
   /   \      /    \
  4     5   6    7
    \
     8

Example 1:

Input:
       1
    /    \
   3      2
Output: 1 2

APPROACH :

public:
    
    void solve(Node* root, vector<int> &ans,int level){
        
        // base case
        if(root == NULL) return;
        
        if(level == ans.size()) ans.push_back(root -> data);
        
        
        // The only diff between left and right view
        // right to left
        solve(root->right,ans,level+1);
        solve(root->left,ans,level+1);
        
    }
    //Function to return list containing elements of right view of binary tree.
    vector<int> rightView(Node *root)
    {
       vector<int> ans;
       solve(root,ans,0);
       return ans;
    }