Given a Binary Tree, print Left view of it. Left view of a Binary Tree is set of nodes visible when tree is visited from Left side. The task is to complete the function leftView(), which accepts root of the tree as argument.

Left view of following tree is 1 2 4 8.

          1
       /     \
     2        3
   /     \    /    \
  4     5   6    7
   \
     8   

Input:
   1
 /  \
3    2
Output: 1 3

APPRAOCH :

// recursive function
void solve(Node* root, vector<int> &ans, int level){
    
    // base case
    if(root == NULL) return;
    
    // this means level is hit..for eg at start level is 0 and size is 0 and so on.
    if(level == ans.size()) ans.push_back(root->data);
    
    // basic recusion from left to right and increase level.
    solve(root->left,ans,level+1 );
    solve(root->right,ans,level+1);
}
vector<int> leftView(Node *root)
{
   vector<int> ans;
   solve(root,ans,0);
   return ans;
}
